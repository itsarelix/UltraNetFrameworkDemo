@page "/OtpGeneration"
@using UltraNet.UI.Model
@using UltraNet.UI.Services
@inject IOtpService OtpService


<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-5 col-md-7 col-sm-10">
            <div class="card shadow">
                <div class="card-body">
                    <h3 class="purpleTitle text-center mb-4">Send Otp</h3>
                    <EditForm Model="@model" OnValidSubmit="SendOtp">
                        <DataAnnotationsValidator />

                        <div class="form-floating mb-3">
                            <InputText @bind-Value="model.Receiver" class="form-control" id="receiverInput" placeholder="Receiver" />
                            <label for="receiverInput">Receiver</label>
                            <ValidationMessage For="@(() => model.Receiver)" />
                        </div>

                        

                        <button type="submit" class="btn purpleButton w-100">Send</button>

                        @if (!string.IsNullOrEmpty(message))
                        {
                            <div class="alert alert-success mt-3">@message</div>
                        }
                        else if (!string.IsNullOrEmpty(error))
                        {
                            <div class="alert alert-danger mt-3">@error</div>

                        }

                    </EditForm>

                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private string mobile = "";
    private string otpCode = "";
    private string? message;
    private string? error;


    private SendOtpRequest model = new();


    private async Task SendOtp()
    {
        var result = await OtpService.SendOtpAsync(model);
        if (result == null || !result.IsSuccess)
        {
            error = result?.Message ?? "Failed to send OTP.";
            message = "";
            return;
        }

        message = $"OTP sent successfully!  Code:{result.Data} ";
        error = "";
    }

}